{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/csharp/csharp.js"],"names":["conf","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","RegExp","end","language","defaultToken","tokenPostfix","token","keywords","namespaceFollows","parenFollows","operators","symbols","escapes","tokenizer","root","cases","next","include","qualified","namespace","comment","string","litstring","litinterpstring","interpolatedstring","whitespace"],"mappings":"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","file":"csharp.90a85f6a.map","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n    comments: {\r\n        lineComment: '//',\r\n        blockComment: ['/*', '*/'],\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')'],\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\r\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '<', close: '>' },\r\n        { open: '\\'', close: '\\'' },\r\n        { open: '\"', close: '\"' },\r\n    ],\r\n    folding: {\r\n        markers: {\r\n            start: new RegExp(\"^\\\\s*#region\\\\b\"),\r\n            end: new RegExp(\"^\\\\s*#endregion\\\\b\")\r\n        }\r\n    }\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.cs',\r\n    brackets: [\r\n        { open: '{', close: '}', token: 'delimiter.curly' },\r\n        { open: '[', close: ']', token: 'delimiter.square' },\r\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\r\n        { open: '<', close: '>', token: 'delimiter.angle' }\r\n    ],\r\n    keywords: [\r\n        'extern', 'alias', 'using', 'bool', 'decimal', 'sbyte', 'byte', 'short',\r\n        'ushort', 'int', 'uint', 'long', 'ulong', 'char', 'float', 'double',\r\n        'object', 'dynamic', 'string', 'assembly', 'is', 'as', 'ref',\r\n        'out', 'this', 'base', 'new', 'typeof', 'void', 'checked', 'unchecked',\r\n        'default', 'delegate', 'var', 'const', 'if', 'else', 'switch', 'case',\r\n        'while', 'do', 'for', 'foreach', 'in', 'break', 'continue', 'goto',\r\n        'return', 'throw', 'try', 'catch', 'finally', 'lock', 'yield', 'from',\r\n        'let', 'where', 'join', 'on', 'equals', 'into', 'orderby', 'ascending',\r\n        'descending', 'select', 'group', 'by', 'namespace', 'partial', 'class',\r\n        'field', 'event', 'method', 'param', 'property', 'public', 'protected',\r\n        'internal', 'private', 'abstract', 'sealed', 'static', 'struct', 'readonly',\r\n        'volatile', 'virtual', 'override', 'params', 'get', 'set', 'add', 'remove',\r\n        'operator', 'true', 'false', 'implicit', 'explicit', 'interface', 'enum',\r\n        'null', 'async', 'await', 'fixed', 'sizeof', 'stackalloc', 'unsafe', 'nameof',\r\n        'when'\r\n    ],\r\n    namespaceFollows: [\r\n        'namespace', 'using',\r\n    ],\r\n    parenFollows: [\r\n        'if', 'for', 'while', 'switch', 'foreach', 'using', 'catch', 'when'\r\n    ],\r\n    operators: [\r\n        '=', '??', '||', '&&', '|', '^', '&', '==', '!=', '<=', '>=', '<<',\r\n        '+', '-', '*', '/', '%', '!', '~', '++', '--', '+=',\r\n        '-=', '*=', '/=', '%=', '&=', '|=', '^=', '<<=', '>>=', '>>', '=>'\r\n    ],\r\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\r\n    // escape sequences\r\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            // identifiers and keywords\r\n            [/\\@?[a-zA-Z_]\\w*/, {\r\n                    cases: {\r\n                        '@namespaceFollows': { token: 'keyword.$0', next: '@namespace' },\r\n                        '@keywords': { token: 'keyword.$0', next: '@qualified' },\r\n                        '@default': { token: 'identifier', next: '@qualified' }\r\n                    }\r\n                }],\r\n            // whitespace\r\n            { include: '@whitespace' },\r\n            // delimiters and operators\r\n            [/}/, {\r\n                    cases: {\r\n                        '$S2==interpolatedstring': { token: 'string.quote', next: '@pop' },\r\n                        '$S2==litinterpstring': { token: 'string.quote', next: '@pop' },\r\n                        '@default': '@brackets'\r\n                    }\r\n                }],\r\n            [/[{}()\\[\\]]/, '@brackets'],\r\n            [/[<>](?!@symbols)/, '@brackets'],\r\n            [/@symbols/, {\r\n                    cases: {\r\n                        '@operators': 'delimiter',\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n            // numbers\r\n            [/[0-9_]*\\.[0-9_]+([eE][\\-+]?\\d+)?[fFdD]?/, 'number.float'],\r\n            [/0[xX][0-9a-fA-F_]+/, 'number.hex'],\r\n            [/0[bB][01_]+/, 'number.hex'],\r\n            [/[0-9_]+/, 'number'],\r\n            // delimiter: after number because of .\\d floats\r\n            [/[;,.]/, 'delimiter'],\r\n            // strings\r\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\r\n            [/\"/, { token: 'string.quote', next: '@string' }],\r\n            [/\\$\\@\"/, { token: 'string.quote', next: '@litinterpstring' }],\r\n            [/\\@\"/, { token: 'string.quote', next: '@litstring' }],\r\n            [/\\$\"/, { token: 'string.quote', next: '@interpolatedstring' }],\r\n            // characters\r\n            [/'[^\\\\']'/, 'string'],\r\n            [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\r\n            [/'/, 'string.invalid']\r\n        ],\r\n        qualified: [\r\n            [/[a-zA-Z_][\\w]*/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n            [/\\./, 'delimiter'],\r\n            ['', '', '@pop'],\r\n        ],\r\n        namespace: [\r\n            { include: '@whitespace' },\r\n            [/[A-Z]\\w*/, 'namespace'],\r\n            [/[\\.=]/, 'delimiter'],\r\n            ['', '', '@pop'],\r\n        ],\r\n        comment: [\r\n            [/[^\\/*]+/, 'comment'],\r\n            // [/\\/\\*/,    'comment', '@push' ],    // no nested comments :-(\r\n            ['\\\\*/', 'comment', '@pop'],\r\n            [/[\\/*]/, 'comment']\r\n        ],\r\n        string: [\r\n            [/[^\\\\\"]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/\"/, { token: 'string.quote', next: '@pop' }]\r\n        ],\r\n        litstring: [\r\n            [/[^\"]+/, 'string'],\r\n            [/\"\"/, 'string.escape'],\r\n            [/\"/, { token: 'string.quote', next: '@pop' }]\r\n        ],\r\n        litinterpstring: [\r\n            [/[^\"{]+/, 'string'],\r\n            [/\"\"/, 'string.escape'],\r\n            [/{{/, 'string.escape'],\r\n            [/}}/, 'string.escape'],\r\n            [/{/, { token: 'string.quote', next: 'root.litinterpstring' }],\r\n            [/\"/, { token: 'string.quote', next: '@pop' }]\r\n        ],\r\n        interpolatedstring: [\r\n            [/[^\\\\\"{]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/{{/, 'string.escape'],\r\n            [/}}/, 'string.escape'],\r\n            [/{/, { token: 'string.quote', next: 'root.interpolatedstring' }],\r\n            [/\"/, { token: 'string.quote', next: '@pop' }]\r\n        ],\r\n        whitespace: [\r\n            [/^[ \\t\\v\\f]*#((r)|(load))(?=\\s)/, 'directive.csx'],\r\n            [/^[ \\t\\v\\f]*#\\w.*$/, 'namespace.cpp'],\r\n            [/[ \\t\\v\\f\\r\\n]+/, ''],\r\n            [/\\/\\*/, 'comment', '@comment'],\r\n            [/\\/\\/.*$/, 'comment'],\r\n        ],\r\n    },\r\n};\r\n"]}