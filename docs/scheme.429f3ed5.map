{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/scheme/scheme.js"],"names":["conf","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","language","defaultToken","ignoreCase","tokenPostfix","token","keywords","constants","operators","tokenizer","root","include","cases","comment","whitespace","strings","multiLineString"],"mappings":"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","file":"scheme.429f3ed5.map","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    comments: {\r\n        lineComment: ';',\r\n        blockComment: ['#|', '|#'],\r\n    },\r\n    brackets: [['(', ')'], ['{', '}'], ['[', ']']],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n    ],\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    ignoreCase: true,\r\n    tokenPostfix: '.scheme',\r\n    brackets: [\r\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\r\n        { open: '{', close: '}', token: 'delimiter.curly' },\r\n        { open: '[', close: ']', token: 'delimiter.square' },\r\n    ],\r\n    keywords: [\r\n        'case',\r\n        'do',\r\n        'let',\r\n        'loop',\r\n        'if',\r\n        'else',\r\n        'when',\r\n        'cons',\r\n        'car',\r\n        'cdr',\r\n        'cond',\r\n        'lambda',\r\n        'lambda*',\r\n        'syntax-rules',\r\n        'format',\r\n        'set!',\r\n        'quote',\r\n        'eval',\r\n        'append',\r\n        'list',\r\n        'list?',\r\n        'member?',\r\n        'load',\r\n    ],\r\n    constants: ['#t', '#f'],\r\n    operators: ['eq?', 'eqv?', 'equal?', 'and', 'or', 'not', 'null?'],\r\n    tokenizer: {\r\n        root: [\r\n            [/#[xXoObB][0-9a-fA-F]+/, 'number.hex'],\r\n            [/[+-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)?/, 'number.float'],\r\n            [\r\n                /(?:\\b(?:(define|define-syntax|define-macro))\\b)(\\s+)((?:\\w|\\-|\\!|\\?)*)/,\r\n                ['keyword', 'white', 'variable'],\r\n            ],\r\n            { include: '@whitespace' },\r\n            { include: '@strings' },\r\n            [\r\n                /[a-zA-Z_#][a-zA-Z0-9_\\-\\?\\!\\*]*/,\r\n                {\r\n                    cases: {\r\n                        '@keywords': 'keyword',\r\n                        '@constants': 'constant',\r\n                        '@operators': 'operators',\r\n                        '@default': 'identifier',\r\n                    },\r\n                },\r\n            ],\r\n        ],\r\n        comment: [\r\n            [/[^\\|#]+/, 'comment'],\r\n            [/#\\|/, 'comment', '@push'],\r\n            [/\\|#/, 'comment', '@pop'],\r\n            [/[\\|#]/, 'comment'],\r\n        ],\r\n        whitespace: [\r\n            [/[ \\t\\r\\n]+/, 'white'],\r\n            [/#\\|/, 'comment', '@comment'],\r\n            [/;.*$/, 'comment'],\r\n        ],\r\n        strings: [\r\n            [/\"$/, 'string', '@popall'],\r\n            [/\"(?=.)/, 'string', '@multiLineString'],\r\n        ],\r\n        multiLineString: [\r\n            [/[^\\\\\"]+$/, 'string', '@popall'],\r\n            [/[^\\\\\"]+/, 'string'],\r\n            [/\\\\./, 'string.escape'],\r\n            [/\"/, 'string', '@popall'],\r\n            [/\\\\$/, 'string']\r\n        ],\r\n    },\r\n};\r\n"]}